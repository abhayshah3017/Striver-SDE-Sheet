//Author: Abhay Shah
//LinkedIn: https://www.linkedin.com/in/abhay-shah07/

//Question: https://leetcode.com/problems/balanced-binary-tree/

/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    int maxDepth(TreeNode* root){
        if(root==NULL)
            return 0;
        int ld=maxDepth(root->left);
        if(ld==-1)
            return -1;
        int rd=maxDepth(root->right);
        if(rd==-1)
            return -1;
        if(abs(ld-rd)>1)
            return -1;
        return 1+max(ld,rd);
    }
    bool isBalanced(TreeNode* root) {
        int ans=maxDepth(root);
        if(ans==-1)
            return false;
        else
            return true;
    }
};