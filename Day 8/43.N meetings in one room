//Author: Abhay Shah
//LinkedIn: https://www.linkedin.com/in/abhay-shah07/

//Question: https://practice.geeksforgeeks.org/problems/n-meetings-in-one-room-1587115620/1#

class Solution
{
    public:
    bool static helper(pair<int,int>a,pair<int,int>b)
    {
        return a.second<b.second;
    }
    //Function to find the maximum number of meetings that can
    //be performed in a meeting room.
    int maxMeetings(int start[], int end[], int n)
    {
        // Your code here
        vector<pair<int,int>>vec;
        for(int i=0;i<n;i++)
        {
            vec.push_back({start[i],end[i]});
        }
        sort(vec.begin(),vec.end(),helper);
        int count=1,limit=vec[0].second;
        for(int i=1;i<n;i++)
        {
            if(vec[i].first>limit)
            {
                count++;
                limit=vec[i].second;
            }
        }
        return count;
    }
};