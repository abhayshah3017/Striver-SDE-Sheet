//Author: Abhay Shah
//LinkedIn: https://www.linkedin.com/in/abhay-shah07/

//Question: https://practice.geeksforgeeks.org/problems/fractional-knapsack-1587115620/1#

//class implemented
/*
struct Item{
    int value;
    int weight;
};
*/


class Solution
{
    public:
    bool static myComparator(Item a,Item b){
        double x = (double)a.value / (double)a.weight;
        double y = (double)b.value / (double)b.weight;
        return x>y;
    }
    //Function to get the maximum total value in the knapsack.
    double fractionalKnapsack(int W, Item arr[], int n)
    {
        // Your code here
        sort(arr,arr+n,myComparator);
        
        double ans=0;
        int cap=W;
        
        for(int i=0;i<n;i++){
            if(cap<=0)
                break;
            else{
                if(cap>=arr[i].weight){
                    cap=cap-arr[i].weight;
                    ans+=arr[i].value;
                }
                else{
                    ans+=((double)arr[i].value/(double)arr[i].weight)*cap;
                    cap=0;
                }
            }
        }
        return ans;
    }
        
};
