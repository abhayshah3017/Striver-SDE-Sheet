//Author: Abhay Shah
//LinkedIn: https://www.linkedin.com/in/abhay-shah07/

//Question: https://leetcode.com/problems/binary-tree-maximum-path-sum/

/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    int solve(TreeNode* root, int &ans){
        if(root==NULL)
            return 0;
        int lsum=solve(root->left,ans);
        if(lsum<0)
            lsum=0;
        int rsum=solve(root->right,ans);
        if(rsum<0)
            rsum=0;
        ans=max(ans,root->val+lsum+rsum);
        return root->val+max(lsum,rsum);
        
    }
    int maxPathSum(TreeNode* root) {
        int ans=INT_MIN;
        int temp=solve(root,ans);
        return ans;
    }
};