//Author: Abhay Shah
//LinkedIn: https://www.linkedin.com/in/abhay-shah07/

//Question: https://practice.geeksforgeeks.org/problems/bottom-view-of-binary-tree/1

vector <int> bottomView(Node *root) {
        // Your Code Here
        vector<int> ans;
        if(root==NULL)
            return ans;
        map<int,int> m;
        queue<pair<Node*,int>> q;
        q.push(make_pair(root,0));
        while(!q.empty()){
            auto k=q.front();
            int level=k.second;
            Node *curr=k.first;
            q.pop();
            m[level]=curr->data;
            if(curr->left!=NULL)
                q.push({curr->left,level-1});
            if(curr->right!=NULL)
                q.push({curr->right,level+1});
        }
        
        for(auto it:m){
            ans.push_back(it.second);
        }
        return ans;
    }